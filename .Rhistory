dat$status<-dat$cens
dat$arm[dat$age>=65]<-"Greater than or equal to 65 years old"
dat$arm[dat$age<65]<-"Less than 65 years old"
model <- c("exponential", "Weibull", "log-normal", "log-logistic")
random <- c("fixed", "normal", "frailty")
x <- brm_surv(time="time", cnsr="1-status", var=c("factor(arm)", "factor(sex)"), rvar="district", data=dat, family="exponential", random="fixed")
summary(x$fit)
# post_sample_x<-posterior_samples(x)
plot(x$fit)
as.data.frame(x$fit)$b_Intercept
x$loo
x$waic
iter=100; warmup=30; chains=1
y <- brm_surv(time="time", cnsr="1-status", var=c("arm", "sex"), rvar="district", data=dat, family="log-logistic", random="frailty", seed=NA, iter=iter, warmup=warmup, chains=chains)
summary(y$fit)
# post_sample_y<-posterior_samples(y)
post_sample_y1 <- as_draws_df(y$fit)
post_sample_y1
y$loo
y$waic
hist(rmstpara(tau=100, var=post_sample_y1$`b[1]`+post_sample_y1$Intercept, shape=post_sample_y1$shape, family="log-logistic") -
rmstpara(tau=100, var=post_sample_y1$Intercept, shape=post_sample_y1$shape, family="log-logistic"),
breaks=50, freq=F, main="", xlab="RMST difference")
r <- "fixed"
hist(rmstpara(tau=100, var=post_sample_y1$Intercept, family="exponential", random=r), breaks=50)
hist(rmstpara(tau=100, var=post_sample_y1$Intercept, shape=post_sample_y1$shape, family="Weibull", random=r), breaks=50)
hist(rmstpara(tau=100, var=post_sample_y1$Intercept, shape=post_sample_y1$shape, family="log-logistic", random=r), breaks=50)
hist(rmstpara(tau=100, var=post_sample_y1$Intercept, sigma=post_sample_y1$shape, family="log-normal", random=r), breaks=50)
r <- "normal"
hist(rmstpara(tau=100, var=post_sample_y1$Intercept, family="exponential", random=r), breaks=50)
hist(rmstpara(tau=100, var=post_sample_y1$Intercept, shape=post_sample_y1$shape, family="Weibull", random=r), breaks=50)
hist(rmstpara(tau=100, var=post_sample_y1$Intercept, shape=post_sample_y1$shape, family="log-logistic", random=r), breaks=50)
hist(rmstpara(tau=100, var=post_sample_y1$Intercept, sigma=post_sample_y1$shape, family="log-normal", random=r), breaks=50)
r <- "frailty"
hist(rmstpara(tau=100, var=post_sample_y1$Intercept, frai=post_sample_y1$`sd_1[1]`, family="exponential", random=r), breaks=50)
hist(rmstpara(tau=100, var=post_sample_y1$Intercept, shape=post_sample_y1$shape, frai=post_sample_y1$`sd_1[1]`, family="Weibull", random=r), breaks=50)
hist(rmstpara(tau=100, var=post_sample_y1$Intercept, shape=post_sample_y1$shape, frai=post_sample_y1$`sd_1[1]`, family="log-logistic", random=r), breaks=50)
hist(rmstpara(tau=100, var=post_sample_y1$Intercept, sigma=post_sample_y1$shape, frai=post_sample_y1$`sd_1[1]`, family="log-normal", random=r), breaks=50)
f <- "exponential"
r <- "normal"
x <- brm_surv(time="time", cnsr="1-status", var=c("factor(arm)", "factor(sex)"), rvar="district", data=dat, family=f, random=r)
post_sample <- as_draws_matrix(x$fit)
# colnames(post_sample)
# if(!is.brmsfit(x)){
#   colnames(post_sample) <- c(var, "Intercept", "shape", "sd")
# }
# colnames(post_sample_y1[,1:5])
x$loo
x$waic
f <- "log-logistic"
r <- "frailty"
y1 <- brm_surv(time="time", cnsr="1-status", var=c("factor(arm)", "factor(sex)"), rvar="district", data=dat, family=f, random=r)
y1
as_draws_matrix(y1$fit)
y1$loo
y1$waic
system(sprintf("chmod +x %s", "rmstBayespara/configure"))
system(sprintf("chmod +x %s", "C:/Users/keihb/Dropbox/研究/010_論文化検討/2024_[arXiv]_02_Bayesian parametric RMST/02_program/rmstBayespara/configure"))
devtools::document()
devtools::build()
devtools::check()
devtools::build()
devtools::check()
usethis::use_gpl3_license()
devtools::document()
usethis::use_mit_license(copyright_holder = "Keisuke Hanada, Masahiro Kojima")
usethis::use_mit_license(copyright_holder = "Keisuke Hanada, Masahiro Kojima")
usethis::use_mit_license(copyright_holder = "Keisuke Hanada, Masahiro Kojima")
devtools::document()
devtools::load_all(".")
help("rmstBayespara")
help("brm_surv")
devtools::document(clean=TRUE)
devtools::document(clean = TRUE)
roxygen2::roxygenise(clean = TRUE)
roxygen2::roxygenise(clean = TRUE)
devtools::document()
devtools::build()
devtools::check()
library(rmstBayespara)
devtools::check(cran = TRUE)
rstantools::rstan_config()
pkgbuild::compile_dll()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
library(rmstBayespara)
library(rmstBayespara)
devtools::build()
devtools::check()
rstan_config()
help(rstan_config)
devtools::document()
rstan_config()
devtools::build()
devtools::check()
library(rmstBayespara)
devtools::document()
remove.packages("rmstBayespara")
devtools::build()
devtools::build()
devtools::document()
devtools::build()
library(rmstBayespara)
devtools::document()
remove.packages("rmstBayespara")
library(rmstBayespara)
install.packages("kableExtra")
install.packages("palmerpenguins")
install.packages("plotly")
install.packages("rjtools")
knit_with_parameters("C:/Users/keihb/Dropbox/共同研究（花田さんと）/Bayesian RMST/R Journal/99_Others/Kojima/test.Rmd")
knitr::knit2pdf("C:/Users/keihb/Dropbox/共同研究（花田さんと）/Bayesian RMST/R Journal/99_Others/Kojima/test.Rmd")
install.packages('tinytex')
install.packages("tinytex")
knitr::knit2pdf("C:/Users/keihb/Dropbox/共同研究（花田さんと）/Bayesian RMST/R Journal/99_Others/Kojima/test.Rmd")
rjtools::rjournal_pdf_article()
knitr::knit("C:/Users/keihb/Dropbox/共同研究（花田さんと）/Bayesian RMST/R Journal/99_Others/Kojima/test.Rmd", output="pdf")
knitr::knit2pdf("C:/Users/keihb/Dropbox/共同研究（花田さんと）/Bayesian RMST/R Journal/99_Others/Kojima/test.tex")
rmarkdown::render("C:/Users/keihb/Dropbox/共同研究（花田さんと）/Bayesian RMST/R Journal/99_Others/Kojima/test.Rmd")
rjtools::rjournal_article()
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
rmarkdown::render("C:/Users/keihb/Dropbox/共同研究（花田さんと）/Bayesian RMST/R Journal/99_Others/Kojima/test.Rmd")
library(rmstBayespara)
library(spBayesSurv)
library(rstan)
library(brms)
library(loo)
data(LeukSurv)
dat<-LeukSurv
dat$status<-dat$cens
dat$arm[dat$age>=65]<-"Greater than or equal to 65 years old"
dat$arm[dat$age<65]<-"Less than 65 years old"
model <- c("exponential", "Weibull", "log-normal", "log-logistic")
random <- c("fixed", "normal", "frailty")
x <- brm_surv(time="time", cnsr="1-status", var=c("factor(arm)", "factor(sex)"), rvar="district", data=dat, family="exponential", random="fixed")
x
x$fit
x$post_sample
iter=100; warmup=30; chains=1
y <- brm_surv(time="time", cnsr="1-status", var=c("arm", "sex"), rvar="district", data=dat, family="log-logistic", random="frailty", seed=NA, iter=iter, warmup=warmup, chains=chains)
summary(y$fit)
y$fit
y$post_sample
y$fit
devtools::build()
devtools::build()
devtools::document()
devtools::build()
library(rmstBayespara)
update.packages(ask=FALSE, checkBuilt=TRUE)
library(rmstBayespara)
library(rmstBayespara)
devtools::build()
remove.packages("rmstBayespara")
library(rmstBayespara)
install.packages(lib="C:/Users/keihb/Dropbox/共同研究（花田さんと）/Bayesian RMST/02_program/hanada/rmstBayespara/rmstBayespara_0.1.0.tar.gz")
install.packages("C:/Users/keihb/Dropbox/共同研究（花田さんと）/Bayesian RMST/02_program/hanada/rmstBayespara/rmstBayespara_0.1.0.tar.gz", repos=NULL, type="source")
remove.packages("rmstBayespara")
install.packages("C:/Users/keihb/Dropbox/共同研究（花田さんと）/Bayesian RMST/02_program/hanada/rmstBayespara/rmstBayespara_0.1.0.tar.gz", repos=NULL, type="source")
library(rmstBayespara)
library(spBayesSurv)
library(rstan)
library(brms)
library(loo)
data(LeukSurv)
dat<-LeukSurv
dat$status<-dat$cens
dat$arm[dat$age>=65]<-"Greater than or equal to 65 years old"
dat$arm[dat$age<65]<-"Less than 65 years old"
model <- c("exponential", "Weibull", "log-normal", "log-logistic")
random <- c("fixed", "normal", "frailty")
iter=100; warmup=30; chains=1
y <- brm_surv(time="time", cnsr="1-status", var=c("arm", "sex"), rvar="district", data=dat, family="log-logistic", random="frailty", seed=NA, iter=iter, warmup=warmup, chains=chains)
summary(y$fit)
y$post_sample
library(rmstBayespara)
library(rmstBayespara)
library(spBayesSurv)
library(rstan)
library(loo)
data(LeukSurv)
data(LeukSurv)
dat<-LeukSurv
dat$status<-dat$cens
dat$arm[dat$age>=65]<-"Greater than or equal to 65 years old"
dat$arm[dat$age<65]<-"Less than 65 years old"
data(LeukSurv)
dat<-LeukSurv
dat$status<-dat$cens
dat$arm[dat$age>=65]<-“Greater than or equal to 65 years old”
data(LeukSurv)
dat<-LeukSurv
dat$status<-dat$cens
dat$arm[dat$age>=65]<-“Greater than or equal to 65 years old”
dat$status<-dat$cens
dat$arm[dat$age>=65]<-"Greater than or equal to 65 years old"
dat$arm[dat$age<65]<-"Less than 65 years old"
fit_x_r <- brm_surv(time="time", cnsr="1-status", var=c("factor(arm)", "factor(sex)"), rvar="district",
data=dat, family="Weibull", random="normal")
library(rmstBayespara)
fit_x_r <- brm_surv(time="time", cnsr="1-status", var=c("factor(arm)", "factor(sex)"), rvar="district",
data=dat, family="Weibull", random="normal")
library(rmstBayespara)
library(spBayesSurv)
library(rstan)
library(brms)
library(loo)
data(LeukSurv)
dat<-LeukSurv
dat$status<-dat$cens
dat$arm[dat$age>=65]<-"Greater than or equal to 65 years old"
dat$arm[dat$age<65]<-"Less than 65 years old"
fit_x_r <- brm_surv(time="time", cnsr="1-status", var=c("factor(arm)", "factor(sex)"), rvar="district",
data=dat, family="Weibull", random="normal")
fit_x_r <- brm_surv(time="time", cnsr="1-status", var=c("factor(arm)", "factor(sex)"), rvar="district",
data=dat, family="Weibull", random="normal")
fit_x_r$waic
ps_x_r<-fit_x_r$post_sample
ps_x_r
fit_x_r$fit
as_draws_matrix(fit_x_r$fit)
ps_x_r<-fit_x_r$post_sample
fit_x_r$post_sample
iter=100; warmup=30; chains=1
y <- brm_surv(time="time", cnsr="1-status", var=c("arm", "sex"), rvar="district", data=dat, family="log-logistic", random="frailty", seed=NA, iter=iter, warmup=warmup, chains=chains)
y$post_sample
y <- brm_surv(time="time", cnsr="1-status", var=c("arm", "sex"), rvar="district", data=dat, family="log-normal", random="normal", seed=NA, iter=iter, warmup=warmup, chains=chains)
y$post_sample
as_draws_matrix(y$fit)
x <- brm_surv(time="time", cnsr="1-status", var=c("arm", "sex"), rvar="district", data=dat, family="log-logistic", random="frailty", seed=NA, iter=iter, warmup=warmup, chains=chains)
as_draws_matrix(y$fit)
as_draws_matrix(y$fit)
as_draws_matrix(x$fit)
as_draws_matrix(x$fit)[,9]
as_draws_matrix(x$fit)[,10]
as_draws_matrix(x$fit)[,20]
as_draws_matrix(y$fit)[,10]
as_draws_matrix(y$fit)[,15]
as_draws_matrix(y$fit)[,30]
as_draws_matrix(y$fit)[,50]
as_draws_matrix(y$fit)[,50]
as_draws_matrix(y$fit)[,40]
as_draws_matrix(y$fit)[,34]
as_draws_matrix(y$fit)[,33]
as_draws_matrix(y$fit)[,30]
unique(dat$district)
as_draws_matrix(y$fit)[,31]
as_draws_matrix(y$fit)[,32]
as_draws_matrix(x$fit)[,32]
as_draws_matrix(x$fit)[,30]
as_draws_matrix(x$fit)[,29]
as_draws_matrix( x$fit)
as_draws_matrix( y$fit)
unique(dat$district)
length(unique(dat$district))
dat$`distinct`
dat$`district`
rvar="district"
dat$`rvar`
dat[,rvar]
data
data<-dat
rvar
length(unique(data[,rvar]))
data$sex
data$c <- c("a", "b")
data$c
dat
d
d <- c("a", "b", "b", "c")
unique(d)
length(unique(d))
sort(unique(data[,rvar]))
library(rmstBayespara)
library(spBayesSurv)
library(rstan)
library(brms)
library(loo)
data(LeukSurv)
dat<-LeukSurv
dat$status<-dat$cens
dat$arm[dat$age>=65]<-"Greater than or equal to 65 years old"
dat$arm[dat$age<65]<-"Less than 65 years old"
fit_x_r <- brm_surv(time="time", cnsr="1-status", var=c("factor(arm)", "factor(sex)"), rvar="district",
data=dat, family="Weibull", random="normal")
fit_x_r <- brm_surv(time="time", cnsr="1-status", var=c("factor(arm)", "factor(sex)"), rvar="district",
data=dat, family="Weibull", random="normal", iter=100, warmup=30, chains=1)
fit_x_r$post_sample
fit_x_r$post_sample[,29]
fit_x_r$post_sample[,28]
fit_x_r <- brm_surv(time="time", cnsr="1-status", var=c("factor(arm)", "factor(sex)"), rvar="district",
data=dat, family="Weibull", random="frailty", iter=100, warmup=30, chains=1)
fit_x_r$post_sample
View(fit_x_r$post_sample)
help("rmstBayespara")
help("rma.exact")
install.packages("rma.exact")
help("rma.exact")
library(rma.exact)
help("rma.exact")
help("rma.exact",package = NULL)
help("brm_surv")
devtools::document()
rmst_diff_x_r<-rmstpara(tau=100, var=ps_x_r[,"b_intercept"]+ps_x_r[,"b_factor(arm)"], shape=ps_x_r[,"shape"], family="Weibull",random="normal")
fit_x_r <- brm_surv(time="time", cnsr="1-status", var=c("factor(arm)", "factor(sex)"), rvar="district",
data=dat, family="Weibull", random="normal", iter=100, warmup=30, chains=1)
ps_x_r<-fit_x_r$post_sample
rmst_diff_x_r<-rmstpara(tau=100, var=ps_x_r[,"b_intercept"]+ps_x_r[,"b_factor(arm)"], shape=ps_x_r[,"shape"], family="Weibull",random="normal")
rmst_diff_x_r
devtools::document()
devtools::build()
library(rmstBayespara)
library(rmstBayespara)
help("brm_surv")
library(rmstBayespara)
library(rmstBayespara)
library(rmstBayespara)
library(rmstBayespara)
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("rstan")
rstan::rstan_options(auto_write=FALSE)
library(rmstBayespara)
help("rmstBayespara")
help("brm_surv")
devtools::document()
devtools::document()
library(devtools)
document()
build()
document(pkg="rmstBayespara")
library(rmstBayespara)
library(rmstBayespara)
help("brm_surv")
library(rmstBayespara)
help("brm_surv")
devtools::document()
library(rmstBayespara)
help("rmstBayespara")
help("brm_surv")
install.packages("spBayesSurv")
library(spBayesSurv)
data(LeukSurv)
dat<-LeukSurv
dat$status<-dat$cens
dat$arm[dat$age>=65]<-"Greater than or equal to 65 years old"
dat$arm[dat$age<65]<-"Less than 65 years old"
fit_x_r <- brm_surv(time="time", cnsr="1-status", var=c("factor(arm)", "factor(sex)"), rvar="district", data=dat, family="Weibull", random="normal", iter=100, warmup=30, chains=1)
install.packages("spBayesSurv")
library(spBayesSurv)
data(LeukSurv)
dat<-LeukSurv
dat$status<-dat$cens
dat$arm[dat$age>=65]<-"Greater than or equal to 65 years old"
dat$arm[dat$age<65]<-"Less than 65 years old"
fit_x_r <- brm_surv(time="time", cnsr="1-status", var=c("factor(arm)", "factor(sex)"), rvar="district", data=dat, family="Weibull", random="normal", iter=100, warmup=30, chains=1)
devtools::document()
devtools::document()
devtools::build()
devtools::install()
library(rmstBayespara)
help("brm_surv")
help("brm_surv")
library(rmstBayespara)
help("rmstBayespara")
help("paste")
library(rmstBayespara)
help("rmstBayespara")
library(rmstBayespara)
help("rmstBayespara")
help("brm_surv")
install.packages("spBayesSurv")
data
library(LerkSurv)
library(spBayesSurv)
data("LeukSurv")
dat<-LeukSurv
dat
head(dat)
d
d <- data.frame(time=c(1,1,1,1,1,1,1,1,1,0), status=c(1,0,1,0,1,1,1,1,0,1), arm=c("t", "t", "t", "t", "t", "c", "c", "c", "c", "c"))
d
d <- data.frame(time=1:10, status=c(1,0,1,0,1,1,1,1,0,1), arm=c("t", "t", "t", "t", "t", "c", "c", "c", "c", "c"))
d <- data.frame(time=1:10, status=c(1,0,1,0,1,1,1,1,0,1), arm=c("t", "t", "t", "t", "t", "c", "c", "c", "c", "c"),)
d <- data.frame(time=1:10,
status=c(1,0,1,0,1,1,1,1,0,1),
arm=c("t", "t", "t", "t", "t", "c", "c", "c", "c", "c"),
sex=c(1,2,1,2,1,2,1,2,1,2)
)
d
d <- data.frame(time=1:10,
status=c(1,0,1,0,1,1,1,1,0,1),
arm=c("t", "t", "t", "t", "t", "c", "c", "c", "c", "c"),
sex=c(1,2,1,2,1,2,1,2,1,2),
district=c(1,1,1,1,2,2,2,3,3,3)
)
d
d <- data.frame(time=1:10,
status=c(1,0,1,0,1,1,1,1,0,1),
arm=c("t", "t", "t", "t", "t", "c", "c", "c", "c", "c"),
sex=c(1,2,1,2,1,2,1,2,1,2),
district=c(1,1,1,1,2,2,2,3,3,3)
)
fit_x_r <- brm_surv(time="time", cnsr="1-status", var=c("factor(arm)", "factor(sex)"), rvar="district", data=d, family="Weibull", random="normal", iter=100, warmup=30, chains=1)
fit_x_r$post_sample
fit_x_r$waic
fit_x_r$loo
fit_x_r <- brm_surv(time="time", cnsr="1-status", var=c("factor(arm)", "factor(sex)"), rvar="district", data=d, family="Weibull", random="frailty", iter=100, warmup=30, chains=1)
fit_x_r$post_sample
fit_x_r$waic
fit_x_r$loo
d <- data.frame(time=1:10,
status=c(1,0,1,0,1,1,1,1,0,1),
arm=c("t", "t", "t", "t", "t", "c", "c", "c", "c", "c"),
sex=c(1,2,1,2,1,2,1,2,1,2),
district=c(1,1,1,1,2,2,2,3,3,3)
)
fit_x_r <- brm_surv(time="time", cnsr="1-status", var=c("factor(arm)", "factor(sex)"), rvar="district", data=d, family="Weibull", random="frailty")
fit_x_r$post_sample
fit_x_r$waic
fit_x_r$loo
d <- data.frame(time=1:100,
status=sample(0:1, size=100, replace=TRUE),
arm=c("t", "t", "t", "t", "t", "c", "c", "c", "c", "c"),
sex=c(1,2,1,2,1,2,1,2,1,2),
district=c(1,1,1,1,2,2,2,3,3,3)
)
d
d <- data.frame(time=1:100,
status=sample(0:1, size=100, replace=TRUE),
arm=sample(c("t", "c"), size=100, replace=TRUE),
sex=sample(1:2, size=100, replace=TRUE),
district=sample(1:5, size=100, replace=TRUE)
)
d
head(d)
fit_x_r <- brm_surv(time="time", cnsr="1-status", var=c("factor(arm)", "factor(sex)"), rvar="district", data=d, family="Weibull", random="frailty")
fit_x_r$post_sample
fit_x_r$waic
fit_x_r$loo
fit_x_r$fit
head(fit_x_r$fit)
head(summary(fit_x_r$fit))
summary(fit_x_r$fit)
summary(fit_x_r$fit)
fit_x_r$fit
ps_x_r<-fit_x_r$post_sample
rmst_diff_x_r<-rmstpara(tau=100, var=ps_x_r[,"b_intercept"]+ps_x_r[,"b_factor(arm)"], shape=ps_x_r[,"shape"], family="Weibull",random="normal")
rmst_diff_x_r
rmst_x_r<-rmstpara(tau=100, var=ps_x_r[,"b_intercept"]+ps_x_r[,"b_factor(arm)"], shape=ps_x_r[,"shape"], family="Weibull",random="frailty")
rmst_diff_x_r
rmst_x_r
c(rmst_x_r)
devtools::document()
help()
10
remove.packages("rmstBayespara")
devtools::install()
rcmdcheck::rcmdcheck()
1
library(rmstBayespara)
help("brm_surv")
help("rmstpara")
devtools::document()
library(rmstBayespara)
library(rmstBayespara)
library(rmstBayespara)
install.packages("Rcpp")
install.packages("Rcpp")
library(rmstBayespara)
help("brm_surv")
devtools::install_github("keisuke-hanada\rmstBayespara")
devtools::install_github("keisuke-hanada/rmstBayespara")
help(rmstBayespara)
help("rmstBayespara")
library(rmstBayespara)
help("rmstBayespara")
library(rmstBayespara)
library(rmstBayespara)
help("rmstBayespara")
help("brm_surv")
help("rmstpara")
dim=14; C=2^dim; V=mean(replicate(100000, {x=2*runif(dim)-1; if(sum(x*x)<1) z=C else z=0}))
print(paste(round(100000*V/C), round((V*gamma(dim/2+1))^(2/dim),3)))
dim=14; C=2^dim; V=mean(replicate(100000, {x=2*runif(dim)-1; if(sum(x*x)<1) z=C else z=0}))
print(paste(round(100000*V/C), round((V*gamma(dim/2+1))^(2/dim),3)))
dim=14; C=2^dim; V=mean(replicate(100000, {x=2*runif(dim)-1; if(sum(x*x)<1) z=C else z=0}))
print(paste(round(100000*V/C), round((V*gamma(dim/2+1))^(2/dim),3)))
dim=14; C=2^dim; V=mean(replicate(100000, {x=2*runif(dim)-1; if(sum(x*x)<1) z=C else z=0}))
print(paste(round(100000*V/C), round((V*gamma(dim/2+1))^(2/dim),3)))
dim=14; C=2^dim; V=mean(replicate(100000, {x=2*runif(dim)-1; if(sum(x*x)<1) z=C else z=0}))
print(paste(round(100000*V/C), round((V*gamma(dim/2+1))^(2/dim),3)))
dim=5; C=2^dim; V=mean(replicate(100000, {x=2*runif(dim)-1; if(sum(x*x)<1) z=C else z=0}))
print(paste(round(100000*V/C), round((V*gamma(dim/2+1))^(2/dim),3)))
dim=5; C=2^dim; V=mean(replicate(100000, {x=2*runif(dim)-1; if(sum(x*x)<1) z=C else z=0}))
print(paste(round(100000*V/C), round((V*gamma(dim/2+1))^(2/dim),3)))
dim=15; C=2^dim; V=mean(replicate(100000, {x=2*runif(dim)-1; if(sum(x*x)<1) z=C else z=0}))
print(paste(round(100000*V/C), round((V*gamma(dim/2+1))^(2/dim),3)))
dim=15; C=2^dim; V=mean(replicate(100000, {x=2*runif(dim)-1; if(sum(x*x)<1) z=C else z=0}))
print(paste(round(100000*V/C), round((V*gamma(dim/2+1))^(2/dim),3)))
dim=15; C=2^dim; V=mean(replicate(100000, {x=2*runif(dim)-1; if(sum(x*x)<1) z=C else z=0}))
print(paste(round(100000*V/C), round((V*gamma(dim/2+1))^(2/dim),3)))
dim=15; C=2^dim; V=mean(replicate(100000, {x=2*runif(dim)-1; if(sum(x*x)<1) z=C else z=0}))
print(paste(round(100000*V/C), round((V*gamma(dim/2+1))^(2/dim),3)))
dim=15; C=2^dim; V=mean(replicate(100000, {x=2*runif(dim)-1; if(sum(x*x)<1) z=C else z=0}))
print(paste(round(100000*V/C), round((V*gamma(dim/2+1))^(2/dim),3)))
dim=15; C=2^dim; V=mean(replicate(100000, {x=2*runif(dim)-1; if(sum(x*x)<1) z=C else z=0}))
print(paste(round(100000*V/C), round((V*gamma(dim/2+1))^(2/dim),3)))
devtools::document()
